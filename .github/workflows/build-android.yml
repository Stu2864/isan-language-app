name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git python3-pip libffi-dev libssl-dev libxml2-dev libxslt1-dev zlib1g-dev python3-dev python3-venv openjdk-11-jdk
        
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install buildozer cython kivy==2.1.0
        
    - name: Accept Android SDK licenses
      run: |
        # Create Android SDK directory
        mkdir -p $HOME/android-sdk
        export ANDROID_HOME=$HOME/android-sdk
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        
        # Download Android command line tools
        cd $HOME/android-sdk
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        
        # Accept licenses automatically
        echo "y" | $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME --licenses
        
        # Install required components
        $ANDROID_HOME/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-31" "build-tools;31.0.0"
        
        # Set environment variables for buildozer
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        
    - name: Create buildozer.spec if missing
      run: |
        if [ ! -f "buildozer.spec" ]; then
          echo "[app]" > buildozer.spec
          echo "title = Isaan Language Learning" >> buildozer.spec
          echo "package.name = isanlanguage" >> buildozer.spec
          echo "package.domain = org.isanlanguage" >> buildozer.spec
          echo "source.dir = ." >> buildozer.spec
          echo "source.include_exts = py,png,jpg,kv,atlas,json,txt" >> buildozer.spec
          echo "version = 1.0" >> buildozer.spec
          echo "requirements = python3,kivy==2.1.0" >> buildozer.spec
          echo "orientation = portrait" >> buildozer.spec
          echo "fullscreen = 0" >> buildozer.spec
          echo "" >> buildozer.spec
          echo "[buildozer]" >> buildozer.spec
          echo "log_level = 2" >> buildozer.spec
          echo "" >> buildozer.spec
          echo "[app@android]" >> buildozer.spec
          echo "android.accept_sdk_license = True" >> buildozer.spec
          echo "android.arch = arm64-v8a" >> buildozer.spec
          echo "android.api = 31" >> buildozer.spec
          echo "android.minapi = 21" >> buildozer.spec
        fi
        
    - name: Build APK
      run: |
        # Accept any remaining licenses
        echo "y" | buildozer android debug
      continue-on-error: true
      
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: isan-language-app
        path: bin/*.apk
        if-no-files-found: ignore
        retention-days: 30
